{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation REMAKE copy BEGIN CUSTOM HOOKS/src/components/ThrillerEditRow.js\";\nimport React, { useState } from 'react';\nimport { movieArray, checkIfFunction, editRowKeyProp } from '../propTypes/propTypes';\nimport { useFormHooks } from '../customHook/formHook';\nexport const ThrillerEditRow = ({\n  thrillerState,\n  editRowKey,\n  removeMovie,\n  setEditRowKey,\n  setFlipEdit,\n  updateThrillerState\n}) => {\n  const [editForm, updateEditForm, reset] = useFormHooks({\n    id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n    name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n    year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n    rating: thrillerState.filter(p => p.id === editRowKey)[0].rating\n  }); // const [editRowFormInput, setEditRowFormInput] = useState({\n  //  id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n  //  name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n  //  year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n  //  rating: thrillerState.filter(p => p.id === editRowKey)[0].rating,\n  // })\n  // const updateEditForm = (e) => {\n  //     setEditRowFormInput({\n  //         ...editRowFormInput,\n  //         [e.target.name]: (e.target.type === 'number') ? Number(e.target.value) : e.target.value\n  //     })\n  // }\n\n  const activateRemoveMovieFromEdit = movieId => {\n    removeMovie(movieId);\n  };\n\n  const activateSetEditRowKeyFromEdit = clickedKey => {\n    setEditRowKey(clickedKey);\n    setEditRowFormInput({\n      id: thrillerState.filter(p => p.id === clickedKey)[0].id,\n      name: thrillerState.filter(p => p.id === clickedKey)[0].name,\n      year: thrillerState.filter(p => p.id === clickedKey)[0].year,\n      rating: thrillerState.filter(p => p.id === clickedKey)[0].rating\n    });\n  };\n\n  const editSaveButton = i => {\n    const arrayCopy = [...thrillerState];\n    arrayCopy.splice(i, 1, editRowFormInput);\n    updateThrillerState(arrayCopy);\n    setFlipEdit(false);\n  };\n\n  const editCancelButton = () => {\n    setFlipEdit(false);\n  };\n\n  return React.createElement(React.Fragment, null, thrillerState.map((m, i) => m.id === editRowKey ? React.createElement(\"tr\", {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, i + 1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: editRowFormInput.name,\n    onChange: updateEditForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    name: \"year\",\n    value: editRowFormInput.year,\n    onChange: updateEditForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    name: \"rating\",\n    value: editRowFormInput.rating,\n    onChange: updateEditForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => editSaveButton(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    onClick: () => editCancelButton(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(\"tr\", {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, i + 1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, m.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, m.year), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, m.rating), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => activateSetEditRowKeyFromEdit(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    onClick: () => activateRemoveMovieFromEdit(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Delete\")))));\n};\nThrillerEditRow.propTypes = {\n  thrillerState: movieArray,\n  setEditRowKey: checkIfFunction,\n  editRowKey: editRowKeyProp,\n  removeMovie: checkIfFunction,\n  setFlipEdit: checkIfFunction,\n  updateThrillerState: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation REMAKE copy BEGIN CUSTOM HOOKS/src/components/ThrillerEditRow.js"],"names":["React","useState","movieArray","checkIfFunction","editRowKeyProp","useFormHooks","ThrillerEditRow","thrillerState","editRowKey","removeMovie","setEditRowKey","setFlipEdit","updateThrillerState","editForm","updateEditForm","reset","id","filter","p","name","year","rating","activateRemoveMovieFromEdit","movieId","activateSetEditRowKeyFromEdit","clickedKey","setEditRowFormInput","editSaveButton","i","arrayCopy","splice","editRowFormInput","editCancelButton","map","m","propTypes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { movieArray, checkIfFunction, editRowKeyProp } from '../propTypes/propTypes'\n\nimport { useFormHooks } from '../customHook/formHook'\n\n\nexport const ThrillerEditRow = ({ thrillerState, editRowKey, removeMovie,\n    setEditRowKey, setFlipEdit, updateThrillerState }) => {\n\n\n    const [editForm, updateEditForm, reset ] = useFormHooks({\n        id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n        name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n        year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n        rating: thrillerState.filter(p => p.id === editRowKey)[0].rating\n    })\n\n    // const [editRowFormInput, setEditRowFormInput] = useState({\n        //  id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n        //  name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n        //  year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n        //  rating: thrillerState.filter(p => p.id === editRowKey)[0].rating,\n    // })\n\n    // const updateEditForm = (e) => {\n    //     setEditRowFormInput({\n    //         ...editRowFormInput,\n    //         [e.target.name]: (e.target.type === 'number') ? Number(e.target.value) : e.target.value\n    //     })\n    // }\n\n    const activateRemoveMovieFromEdit = (movieId) => {\n        removeMovie(movieId)\n    }\n\n    const activateSetEditRowKeyFromEdit = (clickedKey) => {\n        setEditRowKey(clickedKey)\n\n        setEditRowFormInput({\n            id: thrillerState.filter(p => p.id === clickedKey)[0].id,\n            name: thrillerState.filter(p => p.id === clickedKey)[0].name,\n            year: thrillerState.filter(p => p.id === clickedKey)[0].year,\n            rating: thrillerState.filter(p => p.id === clickedKey)[0].rating\n        })\n    }\n\n    const editSaveButton = (i) => {\n        const arrayCopy = [...thrillerState]\n        arrayCopy.splice(i, 1, editRowFormInput)\n\n        updateThrillerState(arrayCopy)\n        setFlipEdit(false)\n    }\n\n    const editCancelButton = () => {\n        setFlipEdit(false)\n    }\n\n    return (\n        <>\n            {thrillerState.map((m, i) =>\n                (m.id === editRowKey) ?\n                    <tr key={m.id}>\n                        <td>{i + 1}</td>\n                        <td><input type='text' name='name' value={editRowFormInput.name} onChange={updateEditForm} /></td>\n                        <td><input type='number' name='year' value={editRowFormInput.year} onChange={updateEditForm} /></td>\n                        <td><input type='number' name='rating' value={editRowFormInput.rating} onChange={updateEditForm} /></td>\n                        <td>\n                            <button onClick={() => editSaveButton(i)}>Save</button>\n                            <button onClick={() => editCancelButton()} >Cancel</button>\n                        </td>\n                    </tr>\n                    :\n                    <tr key={m.id}>\n                        <td>{i + 1}</td>\n                        <td>{m.name}</td>\n                        <td>{m.year}</td>\n                        <td>{m.rating}</td>\n                        <td>\n                            <button onClick={() => activateSetEditRowKeyFromEdit(m.id)} >Edit</button>\n                            <button onClick={() => activateRemoveMovieFromEdit(m.id)} >Delete</button>\n                        </td>\n                    </tr>\n            )\n            }\n        </>\n    )\n}\n\nThrillerEditRow.propTypes = {\n    thrillerState: movieArray,\n    setEditRowKey: checkIfFunction,\n    editRowKey: editRowKeyProp,\n    removeMovie: checkIfFunction,\n    setFlipEdit: checkIfFunction,\n    updateThrillerState: checkIfFunction\n}"]},"metadata":{},"sourceType":"module"}