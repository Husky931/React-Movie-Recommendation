{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerEditRow.js\";\nimport React, { useState, useEffect } from 'react';\nimport { movieArray, checkIfFunction, editRowKeyProp } from '../propTypes/propTypes';\nexport default function ThrillerEditRow({\n  thrillerState,\n  editRowKey,\n  removeMovie,\n  setEditRowKey,\n  setFlipEdit,\n  updateThrillerState\n}) {\n  const [editRowFormInput, setEditRowFormInput] = useState({\n    id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n    name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n    year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n    rating: thrillerState.filter(p => p.id === editRowKey)[0].rating\n  });\n  useEffect(() => {\n    focusInput();\n  }, []);\n\n  const updateEditForm = e => {\n    setEditRowFormInput({ ...editRowFormInput,\n      [e.target.name]: e.target.type === 'number' ? Number(e.target.value) : e.target.value\n    });\n  };\n\n  const activateRemoveMovieFromEdit = movieId => {\n    removeMovie(movieId);\n  };\n\n  const activateSetEditRowKeyFromEdit = clickedKey => {\n    setEditRowKey(clickedKey);\n    setEditRowFormInput({\n      id: thrillerState.filter(p => p.id === clickedKey)[0].id,\n      name: thrillerState.filter(p => p.id === clickedKey)[0].name,\n      year: thrillerState.filter(p => p.id === clickedKey)[0].year,\n      rating: thrillerState.filter(p => p.id === clickedKey)[0].rating\n    });\n  };\n\n  const editSaveButton = i => {\n    const arrayCopy = [...thrillerState];\n    arrayCopy.splice(i, 1, editRowFormInput);\n    updateThrillerState(arrayCopy);\n    setFlipEdit(false);\n  };\n\n  const editCancelButton = () => {\n    setFlipEdit(false);\n  };\n\n  return React.createElement(React.Fragment, null, thrillerState.map((m, i) => m.id === editRowKey ? React.createElement(\"tr\", {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, i + 1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: editRowFormInput.name,\n    onChange: updateEditForm,\n    ref: inputFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    name: \"year\",\n    value: editRowFormInput.year,\n    onChange: updateEditForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"number\",\n    name: \"rating\",\n    value: editRowFormInput.rating,\n    onChange: updateEditForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => editSaveButton(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    onClick: () => editCancelButton(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cancel\"))) : React.createElement(\"tr\", {\n    key: m.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, i + 1), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, m.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, m.year), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, m.rating), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => activateSetEditRowKeyFromEdit(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"button\", {\n    onClick: () => activateRemoveMovieFromEdit(m.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Delete\")))));\n}\nThrillerEditRow.propTypes = {\n  thrillerState: movieArray,\n  setEditRowKey: checkIfFunction,\n  editRowKey: editRowKeyProp,\n  removeMovie: checkIfFunction,\n  setFlipEdit: checkIfFunction,\n  updateThrillerState: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerEditRow.js"],"names":["React","useState","useEffect","movieArray","checkIfFunction","editRowKeyProp","ThrillerEditRow","thrillerState","editRowKey","removeMovie","setEditRowKey","setFlipEdit","updateThrillerState","editRowFormInput","setEditRowFormInput","id","filter","p","name","year","rating","focusInput","updateEditForm","e","target","type","Number","value","activateRemoveMovieFromEdit","movieId","activateSetEditRowKeyFromEdit","clickedKey","editSaveButton","i","arrayCopy","splice","editCancelButton","map","m","inputFocus","propTypes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { movieArray, checkIfFunction, editRowKeyProp } from '../propTypes/propTypes'\n\n\nexport default function ThrillerEditRow({ thrillerState, editRowKey, removeMovie,\n    setEditRowKey, setFlipEdit, updateThrillerState }) {\n\n\n    const [editRowFormInput, setEditRowFormInput] = useState({\n        id: thrillerState.filter(p => p.id === editRowKey)[0].id,\n        name: thrillerState.filter(p => p.id === editRowKey)[0].name,\n        year: thrillerState.filter(p => p.id === editRowKey)[0].year,\n        rating: thrillerState.filter(p => p.id === editRowKey)[0].rating,\n    })\n\n    useEffect(() => {\n        focusInput()\n    }, [])\n\n    const updateEditForm = (e) => {\n        setEditRowFormInput({\n            ...editRowFormInput,\n            [e.target.name]: (e.target.type === 'number') ? Number(e.target.value) : e.target.value\n        })\n    }\n\n    const activateRemoveMovieFromEdit = (movieId) => {\n        removeMovie(movieId)\n    }\n\n    const activateSetEditRowKeyFromEdit = (clickedKey) => {\n        setEditRowKey(clickedKey)\n\n        setEditRowFormInput({\n            id: thrillerState.filter(p => p.id === clickedKey)[0].id,\n            name: thrillerState.filter(p => p.id === clickedKey)[0].name,\n            year: thrillerState.filter(p => p.id === clickedKey)[0].year,\n            rating: thrillerState.filter(p => p.id === clickedKey)[0].rating\n        })\n    }\n\n    const editSaveButton = (i) => {\n        const arrayCopy = [...thrillerState]\n        arrayCopy.splice(i, 1, editRowFormInput)\n\n        updateThrillerState(arrayCopy)\n        setFlipEdit(false)\n    }\n\n    const editCancelButton = () => {\n        setFlipEdit(false)\n    }\n\n    return (\n        <>\n            {thrillerState.map((m, i) =>\n                (m.id === editRowKey) ?\n                    <tr key={m.id}>\n                        <td>{i + 1}</td>\n                        <td><input type='text' name='name' value={editRowFormInput.name} onChange={updateEditForm} ref={inputFocus} /></td>\n                        <td><input type='number' name='year' value={editRowFormInput.year} onChange={updateEditForm} /></td>\n                        <td><input type='number' name='rating' value={editRowFormInput.rating} onChange={updateEditForm} /></td>\n                        <td>\n                            <button onClick={() => editSaveButton(i)}>Save</button>\n                            <button onClick={() => editCancelButton()} >Cancel</button>\n                        </td>\n                    </tr>\n                    :\n                    <tr key={m.id}>\n                        <td>{i + 1}</td>\n                        <td>{m.name}</td>\n                        <td>{m.year}</td>\n                        <td>{m.rating}</td>\n                        <td>\n                            <button onClick={() => activateSetEditRowKeyFromEdit(m.id)} >Edit</button>\n                            <button onClick={() => activateRemoveMovieFromEdit(m.id)} >Delete</button>\n                        </td>\n                    </tr>\n            )\n            }\n        </>\n    )\n}\n\nThrillerEditRow.propTypes = {\n    thrillerState: movieArray,\n    setEditRowKey: checkIfFunction,\n    editRowKey: editRowKeyProp,\n    removeMovie: checkIfFunction,\n    setFlipEdit: checkIfFunction,\n    updateThrillerState: checkIfFunction\n}"]},"metadata":{},"sourceType":"module"}