{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/Movie.js\";\nimport React, { useState } from 'react';\nimport { MovieForm } from './MovieForm';\nimport MovieTable from './MovieTable';\nimport { movieArray } from '../propTypes/propTypes';\nexport const Movie = ({\n  initialMovies,\n  header\n}) => {\n  const [state, setState] = useState(initialMovies.concat());\n  const [flipEdit, setFlipEdit] = useState(false);\n\n  const addMovie = thrillerForm => {\n    setState([...state, {\n      id: state.length === 0 ? 1 : Math.max(...state.map(p => p.id + 1)),\n      ...thrillerForm\n    }]);\n  };\n\n  const removeMovie = movieId => {\n    setState(state.filter(f => f.id !== movieId));\n  };\n\n  const updatestate = arrayCopy => {\n    setState(arrayCopy);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"movieDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Top 5 must see \", header, \" movies\"), React.createElement(MovieTable, {\n    state: state,\n    removeMovie: removeMovie,\n    setState: setState,\n    updatestate: updatestate,\n    setFlipEdit: setFlipEdit,\n    flipEdit: flipEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(MovieForm, {\n    addMovie: addMovie,\n    state: state,\n    flipEdit: flipEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\nMovie.propTypes = {\n  initialMovies: movieArray\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/Movie.js"],"names":["React","useState","MovieForm","MovieTable","movieArray","Movie","initialMovies","header","state","setState","concat","flipEdit","setFlipEdit","addMovie","thrillerForm","id","length","Math","max","map","p","removeMovie","movieId","filter","f","updatestate","arrayCopy","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,SAAQC,UAAR,QAAyB,wBAAzB;AAEA,OAAO,MAAOC,KAAK,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAgC;AAElD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAACK,aAAa,CAACI,MAAd,EAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMY,QAAQ,GAAIC,YAAD,IAAkB;AAC/BL,IAAAA,QAAQ,CAAC,CACL,GAAGD,KADE,EAEL;AACIO,MAAAA,EAAE,EAAGP,KAAK,CAACQ,MAAN,KAAiB,CAAlB,GAAuB,CAAvB,GAA2BC,IAAI,CAACC,GAAL,CAAS,GAAGV,KAAK,CAACW,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACL,EAAF,GAAO,CAAtB,CAAZ,CADnC;AAEI,SAAGD;AAFP,KAFK,CAAD,CAAR;AAOH,GARD;;AAUA,QAAMO,WAAW,GAAIC,OAAD,IAAa;AAC7Bb,IAAAA,QAAQ,CACJD,KAAK,CAACe,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAASO,OAA3B,CADI,CAAR;AAGH,GAJD;;AAMA,QAAMG,WAAW,GAAIC,SAAD,IAAe;AAC/BjB,IAAAA,QAAQ,CAACiB,SAAD,CAAR;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBnB,MAApB,YADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEC,KAAnB;AAA0B,IAAA,WAAW,EAAEa,WAAvC;AACI,IAAA,QAAQ,EAAEZ,QADd;AACwB,IAAA,WAAW,EAAEgB,WADrC;AAEI,IAAA,WAAW,EAAEb,WAFjB;AAE8B,IAAA,QAAQ,EAAED,QAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAMI,oBAAE,SAAF;AAAY,IAAA,QAAQ,EAAEE,QAAtB;AAAgC,IAAA,KAAK,EAAEL,KAAvC;AACA,IAAA,QAAQ,EAAEG,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADJ;AAWH,CApCM;AAsCPN,KAAK,CAACsB,SAAN,GAAkB;AACdrB,EAAAA,aAAa,EAAEF;AADD,CAAlB","sourcesContent":["import React, { useState } from 'react';\n\nimport {MovieForm} from './MovieForm'\nimport MovieTable from './MovieTable'\n\nimport {movieArray} from '../propTypes/propTypes'\n\nexport const  Movie = ({ initialMovies, header })  => {\n\n    const [state, setState] = useState(initialMovies.concat())\n    const [flipEdit, setFlipEdit] = useState(false)\n\n    const addMovie = (thrillerForm) => {\n        setState([\n            ...state,\n            {\n                id: (state.length === 0) ? 1 : Math.max(...state.map(p => p.id + 1)),\n                ...thrillerForm\n            }\n        ])\n    }\n \n    const removeMovie = (movieId) => {\n        setState(\n            state.filter(f => f.id !== movieId)\n        )\n    }\n\n    const updatestate = (arrayCopy) => {\n        setState(arrayCopy)\n    }\n\n    return (\n        <div className='movieDiv'>\n            <h3>Top 5 must see {header} movies</h3>\n            <MovieTable state={state} removeMovie={removeMovie}\n                setState={setState} updatestate={updatestate} \n                setFlipEdit={setFlipEdit} flipEdit={flipEdit} />\n           \n            < MovieForm addMovie={addMovie} state={state}\n            flipEdit={flipEdit}  />\n        </div>\n    )\n}\n\nMovie.propTypes = {\n    initialMovies: movieArray\n}"]},"metadata":{},"sourceType":"module"}