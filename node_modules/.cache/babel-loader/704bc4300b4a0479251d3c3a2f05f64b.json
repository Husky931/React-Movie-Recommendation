{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/MovieForm.js\";\nimport React, { useState } from 'react';\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes';\nimport { useFormHooks } from '../customHook/formHook';\nexport const MovieForm = ({\n  addMovie,\n  state\n}) => {\n  // const [thrillerForm, updateForm, reset] = useFormHooks({\n  //     name: '',\n  //     year: '',\n  //     rating: ''\n  // })\n  const [thrillerForm, setThrillerForm] = useFormHooks({\n    name: '',\n    year: '',\n    rating: ''\n  });\n\n  const activateAddMovie = () => {\n    addMovie(thrillerForm);\n    reset();\n  };\n\n  const addButonEnable = thrillerForm.name.length < 1 || thrillerForm.year.length < 1 || thrillerForm.rating.length < 1 ? true : false;\n\n  if (state.length === 5) {\n    return React.createElement(React.Fragment, null);\n  } else {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"give-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"give-name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: updateForm,\n      value: thrillerForm.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"input\", {\n      id: \"give-year\",\n      type: \"number\",\n      name: \"year\",\n      onChange: updateForm,\n      value: thrillerForm.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"input\", {\n      id: \"give-rating\",\n      type: \"number\",\n      name: \"rating\",\n      onChange: updateForm,\n      value: thrillerForm.rating,\n      min: \"0\",\n      max: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: activateAddMovie,\n      disabled: addButonEnable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Add \"));\n  }\n};\nMovieForm.propTypes = {\n  state: movieArray,\n  addMovie: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/MovieForm.js"],"names":["React","useState","movieArray","checkIfFunction","useFormHooks","MovieForm","addMovie","state","thrillerForm","setThrillerForm","name","year","rating","activateAddMovie","reset","addButonEnable","length","updateForm","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAE7C;AACA;AACA;AACA;AACA;AAGC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,YAAY,CAAC;AACjDM,IAAAA,IAAI,EAAE,EAD2C;AAEjDC,IAAAA,IAAI,EAAE,EAF2C;AAGjDC,IAAAA,MAAM,EAAE;AAHyC,GAAD,CAApD;;AAMD,QAAMC,gBAAgB,GAAG,MAAM;AAC3BP,IAAAA,QAAQ,CAACE,YAAD,CAAR;AAEAM,IAAAA,KAAK;AACR,GAJD;;AAMA,QAAMC,cAAc,GAAKP,YAAY,CAACE,IAAb,CAAkBM,MAAlB,GAA2B,CAA5B,IAAmCR,YAAY,CAACG,IAAb,CAAkBK,MAAlB,GAA2B,CAA9D,IAAqER,YAAY,CAACI,MAAb,CAAoBI,MAApB,GAA6B,CAAnG,GAAyG,IAAzG,GAAgH,KAAvI;;AAEA,MAAIT,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwB;AACpB,WACI,yCADJ;AAIH,GALD,MAMK;AACD,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,QAAQ,EAAEC,UAAxD;AAAoE,MAAA,KAAK,EAAET,YAAY,CAACE,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,QAAQ,EAAEO,UAA1D;AAAsE,MAAA,KAAK,EAAET,YAAY,CAACG,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAoD,MAAA,QAAQ,EAAEM,UAA9D;AAA0E,MAAA,KAAK,EAAET,YAAY,CAACI,MAA9F;AAAsG,MAAA,GAAG,EAAC,GAA1G;AAA8G,MAAA,GAAG,EAAC,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAUI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,gBAA/B;AAAkD,MAAA,QAAQ,EAAEE,cAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVJ,CAFJ;AAgBH;AACJ,CA/CM;AAiDPV,SAAS,CAACa,SAAV,GAAsB;AAClBX,EAAAA,KAAK,EAAEL,UADW;AAElBI,EAAAA,QAAQ,EAAEH;AAFQ,CAAtB","sourcesContent":["import React, { useState } from 'react'\n\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes'\n\nimport { useFormHooks } from '../customHook/formHook'\n\nexport const MovieForm = ({ addMovie, state}) => {\n\n    // const [thrillerForm, updateForm, reset] = useFormHooks({\n    //     name: '',\n    //     year: '',\n    //     rating: ''\n    // })\n\n\n     const [thrillerForm, setThrillerForm] = useFormHooks({\n         name: '',\n         year: '',\n         rating: ''\n     })\n\n    const activateAddMovie = () => {\n        addMovie(thrillerForm)\n\n        reset()\n    }\n\n    const addButonEnable = ((thrillerForm.name.length < 1) || (thrillerForm.year.length < 1) || (thrillerForm.rating.length < 1)) ? true : false  \n\n    if (state.length === 5) {\n        return (\n            <>\n            </>\n        )\n    }\n    else {\n        return (\n\n            <form>\n                <label htmlFor='give-name'>Name</label>\n                <input id='give-name' type='text' name='name' onChange={updateForm} value={thrillerForm.name} />\n\n                <label htmlFor='give-year'>Year</label>\n                <input id='give-year' type='number' name='year' onChange={updateForm} value={thrillerForm.year} />\n\n                <label htmlFor='give-rating'>Rating</label>\n                <input id='give-rating' type='number' name='rating' onChange={updateForm} value={thrillerForm.rating} min='0' max='10' />\n\n                <button type='button' onClick={activateAddMovie}  disabled={addButonEnable} > Add </button>\n                \n            </form>\n        )\n    }\n}\n\nMovieForm.propTypes = {\n    state: movieArray,\n    addMovie: checkIfFunction\n}\n\n"]},"metadata":{},"sourceType":"module"}