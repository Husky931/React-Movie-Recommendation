{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerForm.js\";\nimport React, { useState, forwardRef, memo } from 'react';\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes';\nexport const ThrillerForm = memo(forwardRef(({\n  addMovie,\n  thrillerState\n}, ref) => {\n  const [thrillerForm, setThrillerForm] = useState({\n    name: '',\n    year: '',\n    rating: ''\n  });\n  console.log('ThrillerForm has been rendered');\n\n  const updateForm = e => {\n    setThrillerForm({ ...thrillerForm,\n      [e.target.name]: e.target.type === 'number' ? Number(e.target.value) : e.target.value\n    });\n  };\n\n  const activateAddMovie = () => {\n    addMovie(thrillerForm);\n    setThrillerForm({\n      name: '',\n      year: '',\n      rating: ''\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"give-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    id: \"give-name\",\n    type: \"text\",\n    name: \"name\",\n    onChange: updateForm,\n    value: thrillerForm.name,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"give-year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Year\"), React.createElement(\"input\", {\n    id: \"give-year\",\n    type: \"number\",\n    name: \"year\",\n    onChange: updateForm,\n    value: thrillerForm.year,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"give-rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Rating\"), React.createElement(\"input\", {\n    id: \"give-rating\",\n    type: \"number\",\n    name: \"rating\",\n    onChange: updateForm,\n    value: thrillerForm.rating,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: activateAddMovie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Add to the list\"));\n}));\nThrillerForm.propTypes = {\n  thrillerState: movieArray,\n  addMovie: checkIfFunction\n}; // if (thrillerState.length === 5) {\n//     return (\n//         <>\n//         </>\n//     )\n// }\n// else {","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerForm.js"],"names":["React","useState","forwardRef","memo","movieArray","checkIfFunction","ThrillerForm","addMovie","thrillerState","ref","thrillerForm","setThrillerForm","name","year","rating","console","log","updateForm","e","target","type","Number","value","activateAddMovie","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,IAAtC,QAAkD,OAAlD;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,OAAO,MAAMC,YAAY,GAAGH,IAAI,CAACD,UAAU,CAAC,CAAC;AAAEK,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,EAA6BC,GAA7B,KAAqC;AAE7E,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC;AAC7CW,IAAAA,IAAI,EAAE,EADuC;AAE7CC,IAAAA,IAAI,EAAE,EAFuC;AAG7CC,IAAAA,MAAM,EAAE;AAHqC,GAAD,CAAhD;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBP,IAAAA,eAAe,CACX,EACI,GAAGD,YADP;AAEI,OAACQ,CAAC,CAACC,MAAF,CAASP,IAAV,GAAkBM,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,QAAnB,GAA+BC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASG,KAAV,CAArC,GAAwDJ,CAAC,CAACC,MAAF,CAASG;AAFtF,KADW,CAAf;AAIO,GALX;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BhB,IAAAA,QAAQ,CAACG,YAAD,CAAR;AAEAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAGZC,MAAAA,MAAM,EAAE;AAHI,KAAD,CAAf;AAIG,GAPP;;AAWI,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,QAAQ,EAAEG,UAAxD;AAAoE,IAAA,KAAK,EAAEP,YAAY,CAACE,IAAxF;AAA8F,IAAA,GAAG,EAAEH,GAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAII;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAsB,IAAA,IAAI,EAAC,QAA3B;AAAoC,IAAA,IAAI,EAAC,MAAzC;AAAgD,IAAA,QAAQ,EAAEQ,UAA1D;AAAsE,IAAA,KAAK,EAAEP,YAAY,CAACG,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAOI;AAAO,IAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,EAQI;AAAO,IAAA,EAAE,EAAC,aAAV;AAAwB,IAAA,IAAI,EAAC,QAA7B;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAoD,IAAA,QAAQ,EAAEI,UAA9D;AAA0E,IAAA,KAAK,EAAEP,YAAY,CAACI,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAES,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAVJ,CADJ;AAcH,CA1CsC,CAAX,CAAzB;AA6CPjB,YAAY,CAACkB,SAAb,GAAyB;AACrBhB,EAAAA,aAAa,EAAEJ,UADM;AAErBG,EAAAA,QAAQ,EAAEF;AAFW,CAAzB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, forwardRef, memo } from 'react'\n\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes'\n\nexport const ThrillerForm = memo(forwardRef(({ addMovie, thrillerState}, ref) => {\n\n    const [thrillerForm, setThrillerForm] = useState({\n        name: '',\n        year: '',\n        rating: ''\n    })\n\n    console.log('ThrillerForm has been rendered')\n\n    const updateForm = (e) => {\n        setThrillerForm(\n            {\n                ...thrillerForm,\n                [e.target.name]: (e.target.type === 'number') ? Number(e.target.value) : e.target.value\n            })}\n\n    const activateAddMovie = () => {\n        addMovie(thrillerForm)\n\n        setThrillerForm({\n            name: '',\n            year: '',\n            rating: ''\n        })}\n\n\n   \n        return (\n            <form>\n                <label htmlFor='give-name'>Name</label>\n                <input id='give-name' type='text' name='name' onChange={updateForm} value={thrillerForm.name} ref={ref} />\n\n                <label htmlFor='give-year'>Year</label>\n                <input id='give-year' type='number' name='year' onChange={updateForm} value={thrillerForm.year} />\n\n                <label htmlFor='give-rating'>Rating</label>\n                <input id='give-rating' type='number' name='rating' onChange={updateForm} value={thrillerForm.rating} />\n\n                <button type='button' onClick={activateAddMovie}>Add to the list</button>\n            </form>\n        )\n    }\n))\n\nThrillerForm.propTypes = {\n    thrillerState: movieArray,\n    addMovie: checkIfFunction\n}\n\n// if (thrillerState.length === 5) {\n//     return (\n//         <>\n//         </>\n//     )\n// }\n// else {"]},"metadata":{},"sourceType":"module"}