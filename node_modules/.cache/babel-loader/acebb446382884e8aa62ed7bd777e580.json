{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/MovieForm.js\";\nimport React from 'react';\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes';\nimport { useFormHooks } from '../customHook/formHook';\nexport const MovieForm = ({\n  addMovie,\n  state\n}) => {\n  const [thrillerForm, updateForm, reset] = useFormHooks({\n    name: '',\n    year: '',\n    rating: ''\n  }); // const { email, password } = this.state;\n  // const isEnabled =  email.length > 0 &&  password.length &gt; 0;\n\n  const activateAddMovie = () => {\n    addMovie(thrillerForm);\n    reset();\n  };\n\n  console.log(thrillerForm.name.length);\n\n  if (state.length === 5) {\n    return React.createElement(React.Fragment, null);\n  } else {\n    return (// const addButtonEnable =  { thrillerForm.name.length }\n      React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"give-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        id: \"give-name\",\n        type: \"text\",\n        name: \"name\",\n        onChange: updateForm,\n        value: thrillerForm.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"give-year\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Year\"), React.createElement(\"input\", {\n        id: \"give-year\",\n        type: \"number\",\n        name: \"year\",\n        onChange: updateForm,\n        value: thrillerForm.year,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"give-rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"input\", {\n        id: \"give-rating\",\n        type: \"number\",\n        name: \"rating\",\n        onChange: updateForm,\n        value: thrillerForm.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: activateAddMovie,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Add \"))\n    );\n  }\n};\nMovieForm.propTypes = {\n  state: movieArray,\n  addMovie: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation Main/src/components/MovieForm.js"],"names":["React","movieArray","checkIfFunction","useFormHooks","MovieForm","addMovie","state","thrillerForm","updateForm","reset","name","year","rating","activateAddMovie","console","log","length","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAE7C,QAAM,CAACC,YAAD,EAAeC,UAAf,EAA2BC,KAA3B,IAAoCN,YAAY,CAAC;AACnDO,IAAAA,IAAI,EAAE,EAD6C;AAEnDC,IAAAA,IAAI,EAAE,EAF6C;AAGnDC,IAAAA,MAAM,EAAE;AAH2C,GAAD,CAAtD,CAF6C,CAQjC;AACA;;AAEZ,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,QAAQ,CAACE,YAAD,CAAR;AAEAE,IAAAA,KAAK;AACR,GAJD;;AAMAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACG,IAAb,CAAkBM,MAA9B;;AAEA,MAAIV,KAAK,CAACU,MAAN,KAAiB,CAArB,EAAwB;AACpB,WACI,yCADJ;AAIH,GALD,MAMK;AACD,WAEI;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,IAAI,EAAC,MAAvC;AAA8C,QAAA,QAAQ,EAAER,UAAxD;AAAoE,QAAA,KAAK,EAAED,YAAY,CAACG,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAII;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAO,QAAA,EAAE,EAAC,WAAV;AAAsB,QAAA,IAAI,EAAC,QAA3B;AAAoC,QAAA,IAAI,EAAC,MAAzC;AAAgD,QAAA,QAAQ,EAAEF,UAA1D;AAAsE,QAAA,KAAK,EAAED,YAAY,CAACI,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAQI;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,IAAI,EAAC,QAA7B;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,QAAQ,EAAEH,UAA9D;AAA0E,QAAA,KAAK,EAAED,YAAY,CAACK,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,EAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVJ;AAJJ;AAkBH;AACJ,CA7CM;AA+CPT,SAAS,CAACa,SAAV,GAAsB;AAClBX,EAAAA,KAAK,EAAEL,UADW;AAElBI,EAAAA,QAAQ,EAAEH;AAFQ,CAAtB","sourcesContent":["import React from 'react'\n\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes'\n\nimport { useFormHooks } from '../customHook/formHook'\n\nexport const MovieForm = ({ addMovie, state}) => {\n\n    const [thrillerForm, updateForm, reset] = useFormHooks({\n        name: '',\n        year: '',\n        rating: ''\n    })\n\n                // const { email, password } = this.state;\n                // const isEnabled =  email.length > 0 &&  password.length &gt; 0;\n\n    const activateAddMovie = () => {\n        addMovie(thrillerForm)\n\n        reset()\n    }\n\n    console.log(thrillerForm.name.length)\n\n    if (state.length === 5) {\n        return (\n            <>\n            </>\n        )\n    }\n    else {\n        return (\n\n            // const addButtonEnable =  { thrillerForm.name.length }\n\n            <form>\n                <label htmlFor='give-name'>Name</label>\n                <input id='give-name' type='text' name='name' onChange={updateForm} value={thrillerForm.name} />\n\n                <label htmlFor='give-year'>Year</label>\n                <input id='give-year' type='number' name='year' onChange={updateForm} value={thrillerForm.year} />\n\n                <label htmlFor='give-rating'>Rating</label>\n                <input id='give-rating' type='number' name='rating' onChange={updateForm} value={thrillerForm.rating} />\n\n                <button type='button' onClick={activateAddMovie}  > Add </button>\n                \n            </form>\n        )\n    }\n}\n\nMovieForm.propTypes = {\n    state: movieArray,\n    addMovie: checkIfFunction\n}\n\n"]},"metadata":{},"sourceType":"module"}