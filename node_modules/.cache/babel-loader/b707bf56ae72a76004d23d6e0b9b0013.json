{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes';\nexport default function ThrillerForm({\n  addMovie,\n  thrillerState,\n  focusInput,\n  inputFocus,\n  flipEdit\n}) {\n  const [thrillerForm, setThrillerForm] = useState({\n    name: '',\n    year: '',\n    rating: ''\n  });\n  useEffect(() => {\n    focusInput();\n    console.log('i have been rendered');\n  }, []);\n\n  const updateForm = e => {\n    setThrillerForm({ ...thrillerForm,\n      [e.target.name]: e.target.type === 'number' ? Number(e.target.value) : e.target.value\n    });\n  };\n\n  console.log('i have been summoned');\n\n  const activateAddMovie = () => {\n    addMovie(thrillerForm);\n    setThrillerForm({\n      name: '',\n      year: '',\n      rating: ''\n    });\n  };\n\n  if (thrillerState.length === 5) {\n    return React.createElement(React.Fragment, null);\n  } else {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"give-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"give-name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: updateForm,\n      value: thrillerForm.name,\n      ref: inputFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"input\", {\n      id: \"give-year\",\n      type: \"number\",\n      name: \"year\",\n      onChange: updateForm,\n      value: thrillerForm.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"input\", {\n      id: \"give-rating\",\n      type: \"number\",\n      name: \"rating\",\n      onChange: updateForm,\n      value: thrillerForm.rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: activateAddMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Add to the list\"));\n  }\n}\nThrillerForm.propTypes = {\n  thrillerState: movieArray,\n  addMovie: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation REMAKE/src/components/ThrillerForm.js"],"names":["React","useState","useEffect","movieArray","checkIfFunction","ThrillerForm","addMovie","thrillerState","focusInput","inputFocus","flipEdit","thrillerForm","setThrillerForm","name","year","rating","console","log","updateForm","e","target","type","Number","value","activateAddMovie","length","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,aAAZ;AAA2BC,EAAAA,UAA3B;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA;AAAnD,CAAtB,EAAoF;AAE/F,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC;AAC7CY,IAAAA,IAAI,EAAE,EADuC;AAE7CC,IAAAA,IAAI,EAAE,EAFuC;AAG7CC,IAAAA,MAAM,EAAE;AAHqC,GAAD,CAAhD;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,UAAU;AACVQ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBP,IAAAA,eAAe,CACX,EACI,GAAGD,YADP;AAEI,OAACQ,CAAC,CAACC,MAAF,CAASP,IAAV,GAAkBM,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,QAAnB,GAA+BC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASG,KAAV,CAArC,GAAwDJ,CAAC,CAACC,MAAF,CAASG;AAFtF,KADW,CAAf;AAMH,GAPD;;AASAP,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AAEA,QAAMO,gBAAgB,GAAG,MAAM;AAC3BlB,IAAAA,QAAQ,CAACK,YAAD,CAAR;AAEAC,IAAAA,eAAe,CAAC;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAGZC,MAAAA,MAAM,EAAE;AAHI,KAAD,CAAf;AAKH,GARD;;AASA,MAAIR,aAAa,CAACkB,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,WACI,yCADJ;AAIH,GALD,MAMK;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,QAAQ,EAAEP,UAAxD;AAAoE,MAAA,KAAK,EAAEP,YAAY,CAACE,IAAxF;AAA8F,MAAA,GAAG,EAAEJ,UAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,QAAQ,EAAES,UAA1D;AAAsE,MAAA,KAAK,EAAEP,YAAY,CAACG,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAoD,MAAA,QAAQ,EAAEI,UAA9D;AAA0E,MAAA,KAAK,EAAEP,YAAY,CAACI,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAUI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAES,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVJ,CADJ;AAcH;AACJ;AAEDnB,YAAY,CAACqB,SAAb,GAAyB;AACrBnB,EAAAA,aAAa,EAAEJ,UADM;AAErBG,EAAAA,QAAQ,EAAEF;AAFW,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes'\n\nexport default function ThrillerForm({ addMovie, thrillerState, focusInput, inputFocus, flipEdit}) {\n\n    const [thrillerForm, setThrillerForm] = useState({\n        name: '',\n        year: '',\n        rating: ''\n    })\n\n    useEffect(() => {\n        focusInput()\n        console.log('i have been rendered')\n    }, [])\n\n    const updateForm = (e) => {\n        setThrillerForm(\n            {\n                ...thrillerForm,\n                [e.target.name]: (e.target.type === 'number') ? Number(e.target.value) : e.target.value\n            }\n        )\n    }\n\n    console.log('i have been summoned')\n\n    const activateAddMovie = () => {\n        addMovie(thrillerForm)\n\n        setThrillerForm({\n            name: '',\n            year: '',\n            rating: ''\n        })\n    }\n    if (thrillerState.length === 5) {\n        return (\n            <>\n            </>\n        )\n    }\n    else {\n        return (\n            <form>\n                <label htmlFor='give-name'>Name</label>\n                <input id='give-name' type='text' name='name' onChange={updateForm} value={thrillerForm.name} ref={inputFocus} />\n\n                <label htmlFor='give-year'>Year</label>\n                <input id='give-year' type='number' name='year' onChange={updateForm} value={thrillerForm.year} />\n\n                <label htmlFor='give-rating'>Rating</label>\n                <input id='give-rating' type='number' name='rating' onChange={updateForm} value={thrillerForm.rating} />\n\n                <button type='button' onClick={activateAddMovie}>Add to the list</button>\n            </form>\n        )\n    }\n}\n\nThrillerForm.propTypes = {\n    thrillerState: movieArray,\n    addMovie: checkIfFunction\n}\n\n"]},"metadata":{},"sourceType":"module"}