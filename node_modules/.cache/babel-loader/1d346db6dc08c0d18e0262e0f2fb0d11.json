{"ast":null,"code":"var _jsxFileName = \"/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation REMAKE copy BEGIN CUSTOM HOOKS/src/components/ThrillerForm.js\";\nimport React, { useState } from 'react';\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes';\nimport { useFormHooks } from '../customHook/formHook';\nexport const ThrillerForm = ({\n  addMovie,\n  thrillerState\n}) => {\n  const [thrillerForm, updateForm, reset] = useFormHooks({\n    name: '',\n    year: '',\n    rating: ''\n  });\n\n  const activateAddMovie = () => {\n    addMovie(thrillerForm);\n    reset();\n  };\n\n  if (thrillerState.length === 5) {\n    return React.createElement(React.Fragment, null);\n  } else {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"give-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      id: \"give-name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: updateForm,\n      value: thrillerForm.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"input\", {\n      id: \"give-year\",\n      type: \"number\",\n      name: \"year\",\n      onChange: updateForm,\n      value: thrillerForm.year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"give-rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(\"input\", {\n      id: \"give-rating\",\n      type: \"number\",\n      name: \"rating\",\n      onChange: updateForm,\n      value: thrillerForm.rating,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: activateAddMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Add to the list\"));\n  }\n};\nThrillerForm.propTypes = {\n  thrillerState: movieArray,\n  addMovie: checkIfFunction\n};","map":{"version":3,"sources":["/Users/enterwizard/My Documents/web-projects/REACT/Movie Recommendation App/Movie Recommendation REMAKE copy BEGIN CUSTOM HOOKS/src/components/ThrillerForm.js"],"names":["React","useState","movieArray","checkIfFunction","useFormHooks","ThrillerForm","addMovie","thrillerState","thrillerForm","updateForm","reset","name","year","rating","activateAddMovie","length","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;AAEA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAExD,QAAM,CAACC,YAAD,EAAeC,UAAf,EAA2BC,KAA3B,IAAoCN,YAAY,CAAC;AACnDO,IAAAA,IAAI,EAAE,EAD6C;AAEnDC,IAAAA,IAAI,EAAE,EAF6C;AAGnDC,IAAAA,MAAM,EAAE;AAH2C,GAAD,CAAtD;;AAOA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BR,IAAAA,QAAQ,CAACE,YAAD,CAAR;AAEAE,IAAAA,KAAK;AACR,GAJD;;AAMA,MAAIH,aAAa,CAACQ,MAAd,KAAyB,CAA7B,EAAgC;AAC5B,WACI,yCADJ;AAIH,GALD,MAMK;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,MAA3B;AAAkC,MAAA,IAAI,EAAC,MAAvC;AAA8C,MAAA,QAAQ,EAAEN,UAAxD;AAAoE,MAAA,KAAK,EAAED,YAAY,CAACG,IAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAO,MAAA,EAAE,EAAC,WAAV;AAAsB,MAAA,IAAI,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,QAAQ,EAAEF,UAA1D;AAAsE,MAAA,KAAK,EAAED,YAAY,CAACI,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAOI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,EAQI;AAAO,MAAA,EAAE,EAAC,aAAV;AAAwB,MAAA,IAAI,EAAC,QAA7B;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAoD,MAAA,QAAQ,EAAEH,UAA9D;AAA0E,MAAA,KAAK,EAAED,YAAY,CAACK,MAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAUI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEC,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAVJ,CADJ;AAcH;AACJ,CArCM;AAuCPT,YAAY,CAACW,SAAb,GAAyB;AACrBT,EAAAA,aAAa,EAAEL,UADM;AAErBI,EAAAA,QAAQ,EAAEH;AAFW,CAAzB","sourcesContent":["import React, { useState } from 'react'\n\nimport { movieArray, checkIfFunction } from '../propTypes/propTypes'\n\nimport { useFormHooks } from '../customHook/formHook'\n\nexport const ThrillerForm = ({ addMovie, thrillerState}) => {\n\n    const [thrillerForm, updateForm, reset] = useFormHooks({\n        name: '',\n        year: '',\n        rating: ''\n    })\n\n\n    const activateAddMovie = () => {\n        addMovie(thrillerForm)\n\n        reset()\n    }\n\n    if (thrillerState.length === 5) {\n        return (\n            <>\n            </>\n        )\n    }\n    else {\n        return (\n            <form>\n                <label htmlFor='give-name'>Name</label>\n                <input id='give-name' type='text' name='name' onChange={updateForm} value={thrillerForm.name} />\n\n                <label htmlFor='give-year'>Year</label>\n                <input id='give-year' type='number' name='year' onChange={updateForm} value={thrillerForm.year} />\n\n                <label htmlFor='give-rating'>Rating</label>\n                <input id='give-rating' type='number' name='rating' onChange={updateForm} value={thrillerForm.rating} />\n\n                <button type='button' onClick={activateAddMovie}>Add to the list</button>\n            </form>\n        )\n    }\n}\n\nThrillerForm.propTypes = {\n    thrillerState: movieArray,\n    addMovie: checkIfFunction\n}\n\n"]},"metadata":{},"sourceType":"module"}